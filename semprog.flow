import net/url_parameter;
import fs/filesystem;
import parser/parse;
import typecheck;
import module;
import algebra;

main() -> void {
    println("Semantic programming framework\n");
    file = getUrlParameter("file");
    if (!fileExists(file)) {
        println("File: " + file  + " doesn't exist");
    } else {
        ext = getFileExt(file);
        if (ext != ".sem") {
            println("Extension: " + ext  + " mismatches the expected .sem");
        } else {
            println(evalAlgebra2s(fullAlgebra));
            show = algebraShow(fullAlgebra);
            eval = algebraEval(fullAlgebra);
            src = getFileContent(file);
            name = changeFileExt(src, "");
            module = typecheckModule(parseModule(src, name), fullAlgebra);
            //module = parseModule(src, name);
            println(module2s(module, show));
            println(
                strGlue(map(module.defs, \def -> 
                    algTypedTerm2s(def.term) + "\n" + show.show(def.term) + "\n" +
                    toString(eval.eval(def.term, makeTree()))
                ), "\n")
            );
        }
    }
    quit(0);
}
